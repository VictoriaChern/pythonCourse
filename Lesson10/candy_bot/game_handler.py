from time import sleep
from telegram import ForceReply
from telegram.ext import (
    Filters,
    CommandHandler,
    MessageHandler,
    ConversationHandler
)
from settings import SETTINGS
import random

def start_command_callback(update, context):
    candies = SETTINGS['candies']
    context.user_data['total_count'] = candies
    update.message.reply_text(f'–ù–∞—á–∞–ª–∞—Å—å –ò–≥—Ä–∞!\n\
        –ù–∞ —Å—Ç–æ–ª–µ –ª–µ–∂–∏—Ç {candies} –∫–æ–Ω—Ñ–µ—Ç–∞')
    update.message.reply_text('–ë—Ä–æ—Å–∞–µ–º –∂—Ä–µ–±–∏–π...')
    sleep(1)
    rand = random.randint(0,1)
    if (rand == 0):
        update.message.reply_text('–¢—ã —Ö–æ–¥–∏—à—å –ø–µ—Ä–≤—ã–º!')
        return player_turn(update, context)
    update.message.reply_text('–Ø —Ö–æ–∂—É –ø–µ—Ä–≤—ã–º!')
    return bot_turn(update, context)

def player_turn_callback(update, context):
    number = update.message.text
    total_count = context.user_data['total_count']
    max_count = SETTINGS['max_count']
    if(not number.isdigit()):
        update.message.reply_text("–û—à–∏–±–∫–∞: –≤—ã –≤–≤–µ–ª–∏ –Ω–µ —á–∏—Å–ª–æ! –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –≤–≤–æ–¥")
        return EXPECT_PLAYER_ANSWER
    number = int(number)
    if(number > max_count):
        update.message.reply_text(f'–û—à–∏–±–∫–∞: –∑–∞ –æ–¥–∏–Ω —Ö–æ–¥ –º–æ–∂–Ω–æ –∑–∞–±—Ä–∞—Ç—å –Ω–µ –±–æ–ª–µ–µ —á–µ–º {max_count} –∫–æ–Ω—Ñ–µ—Ç')
        return EXPECT_PLAYER_ANSWER
    if (number > total_count):
        update.message.reply_text(f'–û—à–∏–±–∫–∞: –≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ –≤–∑—è—Ç—å –±–æ–ª—å—à–µ —á–µ–º {total_count} –∫–æ–Ω—Ñ–µ—Ç')
        return EXPECT_PLAYER_ANSWER
    if (number <= 0):
        update.message.reply_text('–û—à–∏–±–∫–∞: –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–Ω—Ñ–µ—Ç –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –±–æ–ª—å—à–µ –Ω—É–ª—è')
        return EXPECT_PLAYER_ANSWER

    total_count -= number
    update.message.reply_text(f'–ù–∞ —Å—Ç–æ–ª–µ –æ—Å—Ç–∞–ª–æ—Å—å {total_count} –∫–æ–Ω—Ñ–µ—Ç')
    context.user_data['total_count'] = total_count
    if (total_count == 0):
        update.message.reply_text('–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ üò¢, –ë–æ—Ç –ø–æ–±–µ–¥–∏–ª!')
        return ConversationHandler.END
    return bot_turn(update, context)

def player_turn(update, context):
    context.bot.send_message(chat_id=update.effective_chat.id,
        text='–¢–≤–æ–π —Ö–æ–¥. –°–∫–æ–ª—å–∫–æ –∫–æ–Ω—Ñ–µ—Ç –≤—ã —Ö–æ—Ç–∏—Ç–µ –≤–∑—è—Ç—å?', reply_markup=ForceReply())
    return EXPECT_PLAYER_ANSWER

def bot_turn(update, context):
    update.message.reply_text('–ú–æ–π —Ö–æ–¥...')
    total_count = context.user_data['total_count']
    max_count = SETTINGS['max_count']
    limit = max_count if max_count < total_count else total_count
    number = random.randint(1, limit)
    update.message.reply_text(f'–Ø –∑–∞–±–∏—Ä–∞—é {number} –∫–æ–Ω—Ñ–µ—Ç')
    total_count -= number
    update.message.reply_text(f'–ù–∞ —Å—Ç–æ–ª–µ –æ—Å—Ç–∞–ª–æ—Å—å {total_count} –∫–æ–Ω—Ñ–µ—Ç')
    context.user_data['total_count'] = total_count
    if (total_count == 0):
        update.message.reply_text('–Ø –ø—Ä–æ–∏–≥—Ä–∞–ª, –í—ã –ø–æ–±–µ–¥–∏–ª–∏! ü•≥ü•≥ü•≥')
        return ConversationHandler.END
    return player_turn(update, context)

def cancel_callback(update, context):
    update.message.reply_text('–ò–≥—Ä–∞ –ø—Ä–µ—Ä–≤–∞–Ω–∞')
    return ConversationHandler.END

EXPECT_PLAYER_ANSWER = 0 

GAME_HANDLER = ConversationHandler(
    entry_points=[CommandHandler('start', start_command_callback)],
    states={
        EXPECT_PLAYER_ANSWER : [MessageHandler(Filters.text & (~Filters.command), player_turn_callback)]
    },
    fallbacks=[CommandHandler('cancel', cancel_callback)]
)